/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.integradora.view;

import com.mycompany.integradora.Controller.rolController;
import com.mycompany.integradora.Controller.usuarioController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.rolModel;
import model.usuarioModel;

/**
 *
 * @author Osmar
 */
public class FrmUsuarios extends javax.swing.JInternalFrame {
      private DefaultTableModel modeloTabla;
      private int idUsuario;
      private int idRolObtenido =1;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrmUsuarios.class.getName());

    /**
     * Creates new form FrmUsuarios
     */
    public FrmUsuarios() {
         super("Formulario Usuarios", true, true, true, true);
         modeloTabla = new DefaultTableModel(new Object[]{"Id Cliente", "Nombre Cliente","Apellido Paterno","Apellido Materno","Telefono","Contraseña","Id Rol","Direccion","Usuario"},0);
        tblUsuarios = new JTable (modeloTabla);
        initComponents();
        cargarCliente();
        seleccionarUsuario();
        obtenerRol();
        obtenerIdRol();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblApellidoP = new javax.swing.JLabel();
        lblMaterno = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblRol = new javax.swing.JLabel();
        txtApellidoM = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtContra = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        cmbRol = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        lblNombre.setText("Nombre");

        lblApellidoP.setText("Apellido Paterno");

        lblMaterno.setText("Apellido Materno");

        lblTelefono.setText("Telefono");

        lblDireccion.setText("Direccion");

        lblUsuario.setText("Usuario");

        jLabel7.setText("Contraseña");

        lblRol.setText("Id Rol");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(modeloTabla);
        jScrollPane1.setViewportView(tblUsuarios);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefono)
                    .addComponent(lblMaterno)
                    .addComponent(lblApellidoP)
                    .addComponent(lblNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDireccion)
                            .addComponent(lblUsuario))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addComponent(btnAgregar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblRol)
                                .addGap(48, 48, 48)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblDireccion)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblApellidoP))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsuario)
                            .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar))))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaterno)
                    .addComponent(jLabel7)
                    .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelefono)
                            .addComponent(lblRol)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar)
                            .addComponent(cmbRol, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 221, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        agregarUsuario();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        buscarUsuario();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        eliminarUsuario();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        actualizarUsuario();
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FrmUsuarios().setVisible(true));
    }
    /**
 * Métodos para manejar usuarios desde la interfaz.
 * Permiten agregar, mostrar, buscar, eliminar, seleccionar y actualizar usuarios.
 */

/**
 * Agrega un nuevo usuario.
 * - Obtiene los datos de los campos de texto y el rol seleccionado.
 * - Valida que no estén vacíos.
 * - Inserta el usuario usando usuarioController.
 * - Limpia los campos y recarga la tabla.
 */
public void agregarUsuario() {
    String nombre = txtNombre.getText();
    String apellidoP = txtApellidoP.getText();
    String apellidoM = txtApellidoM.getText();
    String telefono = txtTelefono.getText();
    String direccion = txtDireccion.getText();
    String usuario = txtUsuario.getText();
    String contra = txtContra.getText();
    int idRol = idRolObtenido;

    if(nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() || telefono.isEmpty() ||
       direccion.isEmpty() || usuario.isEmpty() || contra.isEmpty()) {
        JOptionPane.showConfirmDialog(this, "Ingresa todos los datos del usuario");
    } else {
        usuarioController.insertarCliente(new usuarioModel(nombre, apellidoP, apellidoM, telefono, contra, idRol, direccion, usuario));
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtTelefono.setText("");
        txtDireccion.setText("");
        txtUsuario.setText("");
        txtContra.setText("");
        cargarCliente();
    }
}

/**
 * Carga todos los usuarios en la tabla.
 * - Limpia la tabla.
 * - Obtiene la lista de usuarios desde usuarioController.
 * - Agrega cada usuario como una fila en la tabla.
 */
public void cargarCliente() {
    modeloTabla.setRowCount(0);
    List<usuarioModel> usuarios = usuarioController.obtenerTodos();
    for(usuarioModel r : usuarios) {
        modeloTabla.addRow(new Object[]{r.getIdUsuario(), r.getNombre(), r.getApellidoP(), r.getApellidoM(),
                                        r.getTelefono(), r.getContraseña(), r.getIdRol(), r.getDireccion(), r.getUsuario()});
    }
}

/**
 * Busca usuarios por nombre.
 * - Solicita el nombre al usuario.
 * - Limpia la tabla y carga los usuarios que coincidan con el nombre.
 */
public void buscarUsuario() {
    String nombre = JOptionPane.showInputDialog(this, "Introduce el nombre del usuario");
    modeloTabla.setRowCount(0);
    List<usuarioModel> usuarios = usuarioController.buscarUsuarioNombre(nombre);
    for(usuarioModel r : usuarios) {
        modeloTabla.addRow(new Object[]{r.getIdUsuario(), r.getNombre(), r.getApellidoP(), r.getApellidoM(),
                                        r.getTelefono(), r.getContraseña(), r.getIdRol(), r.getDireccion(), r.getUsuario()});
    }
}

/**
 * Elimina el usuario seleccionado.
 * - Verifica si hay fila seleccionada.
 * - Obtiene el id del usuario y lo elimina usando usuarioController.
 * - Recarga la tabla.
 */
private void eliminarUsuario() {
    int fila = tblUsuarios.getSelectedRow();
    if (fila != -1) {
        int id = Integer.parseInt(tblUsuarios.getValueAt(fila, 0).toString());
        usuarioController.eliminarUsuario(id);
        cargarCliente();
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un usuario para eliminar");
    }
}

/**
 * Selecciona un usuario de la tabla.
 * - Llenar los campos de texto con los datos del usuario seleccionado.
 */
private void seleccionarUsuario() {
    tblUsuarios.getSelectionModel().addListSelectionListener(e -> {
        if(!e.getValueIsAdjusting()) {
            int fila = tblUsuarios.getSelectedRow();
            if (fila != -1 && tblUsuarios.getRowCount() > 0) {
                idUsuario = Integer.parseInt(tblUsuarios.getValueAt(fila, 0).toString());
                txtNombre.setText(tblUsuarios.getValueAt(fila, 1).toString());
                txtApellidoP.setText(tblUsuarios.getValueAt(fila, 2).toString());
                txtApellidoM.setText(tblUsuarios.getValueAt(fila, 3).toString());
                txtTelefono.setText(tblUsuarios.getValueAt(fila, 4).toString());
                txtContra.setText(tblUsuarios.getValueAt(fila, 5).toString());
                txtDireccion.setText(tblUsuarios.getValueAt(fila, 7).toString());
                txtUsuario.setText(tblUsuarios.getValueAt(fila, 8).toString());
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona un usuario para actualizar.");
            }
        }
    });
}

/**
 * Actualiza los datos de un usuario.
 * - Obtiene los datos de los campos de texto y el rol seleccionado.
 * - Valida que no estén vacíos.
 * - Actualiza el usuario usando usuarioController.
 * - Limpia los campos y recarga la tabla.
 */
public void actualizarUsuario() {
    String nombre = txtNombre.getText();
    String apellidoP = txtApellidoP.getText();
    String apellidoM = txtApellidoM.getText();
    String telefono = txtTelefono.getText();
    String direccion = txtDireccion.getText();
    String usuario = txtUsuario.getText();
    String contra = txtContra.getText();
    int Rol = idRolObtenido;

    if(nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() || telefono.isEmpty() ||
       direccion.isEmpty() || usuario.isEmpty() || contra.isEmpty()) {
        JOptionPane.showConfirmDialog(this, "Ingresa todos los datos del usuario");
    } else {
        usuarioController.actualizarUsuario(new usuarioModel(this.idUsuario, nombre, apellidoP, apellidoM, telefono, contra, Rol, direccion, usuario));
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtTelefono.setText("");
        txtDireccion.setText("");
        txtUsuario.setText("");
        txtContra.setText("");
        cargarCliente();
    }
}

/**
 * Obtiene todos los roles y los agrega al combobox.
 */
private void obtenerRol() {
    cmbRol.removeAllItems();
    List<rolModel> rol = rolController.obtenerTodos();
    for(rolModel roles : rol) {
        cmbRol.addItem(roles);
    }
}

/**
 * Obtiene el id del rol seleccionado en el combobox.
 */
private void obtenerIdRol() {
    cmbRol.addActionListener(e -> {
        rolModel seleccionado = (rolModel) cmbRol.getSelectedItem();
        if(seleccionado != null) {
            idRolObtenido = seleccionado.getIdRol();
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<rolModel> cmbRol;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidoP;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblMaterno;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtContra;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
